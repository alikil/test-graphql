import { Args, InputType } from '@nestjs/graphql';
import { SelectedFieldsResult } from 'nestjs-graphql-tools';

@InputType()
export class BaseObjectType {
  id: string;
  createdAt: Date;
  updatedAt: Date;
}

export class BaseAutogeneratedInputType {
  id: string;
  createdAt: Date;
  updatedAt: Date;
}

export const Filter = (baseEntity: () => any, options?: any) => {
  return function (target: any, propertyName: any, paramIndex: any) {
    Args({
      name: options?.name || 'filter',
      nullable: options?.nullable !== undefined ? options.nullable : true,
    })(target, propertyName, paramIndex);
    return target;
  };
};

export const getFieldsFromContext = (
  key: string,
  selectedFields: SelectedFieldsResult,
): string[] => {
  return selectedFields.ctx
    .getArgs()
    .find((f) => f?.fieldName == key)
    .fieldNodes[0].selectionSet.selections.map((f) => f.name)
    .map((f) => f.value);
};
